@model FSSA.Models.Proposal

@{
    ViewData["Title"] = "Submit Proposal";
}

<h1>Make a New Proposal</h1>

<form id="proposalForm" asp-action="Create" method="post" enctype="multipart/form-data">
    <div class="mb-3">
        <label asp-for="Title" class="form-label"></label>
        <input asp-for="Title" class="form-control" />
        <span asp-validation-for="Title" class="text-danger"></span>
    </div>

    <div class="mb-3">
        <label asp-for="Synopsis" class="form-label"></label>
        <textarea asp-for="Synopsis" class="form-control"></textarea>
        <span asp-validation-for="Synopsis" class="text-danger"></span>
    </div>

    <div class="mb-3">
        <label asp-for="Method" class="form-label"></label>
        <textarea asp-for="Method" class="form-control"></textarea>
        <span asp-validation-for="Method" class="text-danger"></span>
    </div>

   <div class="mb-3">
    <div class="d-flex align-items-center gap-2">
        <label for="MethodImage" class="btn btn-outline-primary d-inline-flex align-items-center mb-0">
            <i class="bi bi-cloud-upload"></i>
        </label>

        <small class="text-muted">
            <span class="d-block">Optionally, Upload Media Associated to Method Contents:</span>
            <span id="methodFileName" class="fst-italic text-primary small"></span>
            <button type="button" id="clearFileBtn" class="btn-close btn-sm align-middle ms-2" aria-label="Remove file" style="display: none;"></button>
        </small>
    </div>

        <input type="file" id="MethodImage" name="MethodImage" class="d-none" onchange="updateMethodFileName()" />
    </div>
    <div class="mb-3">
        <label class="form-label">Project Level</label>
        <select asp-for="ProjectLevelId" class="form-select" asp-items="ViewBag.ProjectLevels">
            <option value="">-- Pick a Project Level --</option>
            <option value="custom">Custom</option>
        </select>
        <span asp-validation-for="ProjectLevelId" class="text-danger"></span>
    </div>

    <div class="mb-3">
        <label asp-for="Resources" class="form-label"></label>
        <textarea asp-for="Resources" class="form-control"></textarea>
        <span asp-validation-for="Resources" class="text-danger"></span>
    </div>

    <div class="mb-3">
        <label asp-for="EthicalConsiderations" class="form-label"></label>
        <textarea asp-for="EthicalConsiderations" class="form-control"></textarea>
        <span asp-validation-for="EthicalConsiderations" class="text-danger"></span>
    </div>

    <div class="mb-3">
        <label asp-for="Outcomes" class="form-label"></label>
        <textarea asp-for="Outcomes" class="form-control"></textarea>
        <span asp-validation-for="Outcomes" class="text-danger"></span>
    </div>

    <div class="mb-3">
        <label asp-for="Milestones" class="form-label"></label>
        <textarea asp-for="Milestones" class="form-control"></textarea>
        <span asp-validation-for="Milestones" class="text-danger"></span>
    </div>

    <div class="mb-3">
        <label asp-for="EstimatedCompletionDate" class="form-label"></label>
        <input asp-for="EstimatedCompletionDate" class="form-control" type="date" min="@DateTime.Now.ToString("yyyy-MM-dd")" />
        <span asp-validation-for="EstimatedCompletionDate" class="text-danger"></span>
    </div>

    <button type="button" class="btn btn-dark mb-3" id="triggerModalBtn">Submit</button>
    <div class="modal fade" id="confirmModal" tabindex="-1" aria-labelledby="confirmModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content shadow">
                <div class="modal-header">
                    <h5 class="modal-title" id="confirmModalLabel">Confirm Submission</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    Are you sure you want to submit this proposal?
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-danger" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-success">Yes, Submit</button>
                </div>
            </div>
        </div>
    </div>
</form>

<div class="modal fade" id="customLevelModal" tabindex="-1" role="dialog" aria-labelledby="customLevelModalLabel" aria-hidden="true">
  <div class="modal-dialog" role="document">
    <form id="customLevelForm">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title">Add Custom Project Level</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
        </div>
        <div class="modal-body">
          <input type="text" class="form-control" id="customLevelInput" placeholder="Enter custom level..." required />
        </div>
        <div class="modal-footer">
          <button type="submit" class="btn btn-primary">Save Level</button>
        </div>
      </div>
    </form>
  </div>
</div>


@section Scripts {
    <partial name="_ValidationScriptsPartial" />

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const form = document.getElementById("proposalForm");
            const triggerBtn = document.getElementById("triggerModalBtn");
            const modalEl = document.getElementById("confirmModal");

            if (form && triggerBtn && modalEl) {
                const modal = new bootstrap.Modal(modalEl);
                triggerBtn.addEventListener("click", function () {
                    if ($(form).valid()) {
                        modal.show();
                    }
                });
            }
        });
    </script>

    <script>
        function updateMethodFileName() {
            const input = document.getElementById('MethodImage');
            const display = document.getElementById('methodFileName');
            const clearBtn = document.getElementById('clearFileBtn');

            if (input.files.length > 0) {
                display.textContent = input.files[0].name;
                clearBtn.style.display = 'inline-block';
            } else {
                display.textContent = '';
                clearBtn.style.display = 'none';
            }
        }

        document.addEventListener("DOMContentLoaded", function () {
            const clearBtn = document.getElementById('clearFileBtn');
            const fileInput = document.getElementById('MethodImage');
            const fileName = document.getElementById('methodFileName');

            clearBtn.addEventListener('click', function () {
                fileInput.value = '';
                fileName.textContent = '';
                clearBtn.style.display = 'none';
            });
        });
    </script>
}
