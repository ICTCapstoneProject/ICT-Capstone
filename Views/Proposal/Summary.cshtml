@model MyProposalViewModel

@{
    ViewData["Title"] = "Proposal Summary";
}

<!-- Display the proposal title -->
<h2>@Model.Title</h2>

<!-- Navigation buttons -->
<div class="d-flex gap-2 mt-3">
    <a class="btn btn-dark" asp-action="Search">Back to Proposals</a>
    <a class="btn btn-warning" asp-action="Details" asp-route-id="@Model.Id">Detail View</a>
</div>

<!-- Summary content container -->
<div class="summary-section">
    <dl class="row">

        <!-- Table fields to be displayed  -->
        <!-- Submitted By -->
        <dt class="col-sm-3">@Html.DisplayNameFor(MyProposalViewModel => MyProposalViewModel.SubmittedByName)</dt>
        <dd class="col-sm-9">@(!string.IsNullOrWhiteSpace(Model.SubmittedByName) ? Model.SubmittedByName : "(No data available)")</dd>


        <!-- Status -->
        <dt class="col-sm-3">@Html.DisplayNameFor(MyProposalViewModel => MyProposalViewModel.StatusName)</dt>
        <dd class="col-sm-9">@(!string.IsNullOrWhiteSpace(Model.StatusName) ? Model.StatusName : "(No data available)")</dd>

        <!-- Project Level -->
        <dt class="col-sm-3">@Html.DisplayNameFor(MyProposalViewModel => MyProposalViewModel.ProjectLevel)</dt>
        <dd class="col-sm-9">@(!string.IsNullOrWhiteSpace(Model.ProjectLevel) ? Model.ProjectLevel : "(No data available)")</dd>

        <!-- Synopsis (reduced, with toggle to allow expansion) -->
        <dt class="col-sm-3">@Html.DisplayNameFor(MyProposalViewModel => MyProposalViewModel.Synopsis)</dt>
        <dd class="col-sm-9">
            @if (!string.IsNullOrWhiteSpace(Model.Synopsis))
            {
                <span id="synopsisPreview">
                    @(Model.Synopsis.Length > 50 ? Model.Synopsis.Substring(0, 50) + "..." : Model.Synopsis)
                    <a href="#" onclick="toggle('synopsis'); return false;">View More</a>
                </span>
                <span id="synopsisFull" style="display:none;">
                    @Model.Synopsis
                    <a href="#" onclick="toggle('synopsis'); return false;">View Less</a>
                </span>
            }
            else
            {
                <span>(No Synopsis Data Provided)</span>
            }
        </dd>


        <!-- Method (reduced, with toggle to allow expansion) -->
        <dt class="col-sm-3">@Html.DisplayNameFor(MyProposalViewModel => MyProposalViewModel.Method)</dt>
        <dd class="col-sm-9">
            @if (!string.IsNullOrWhiteSpace(Model.Method))
            {
                <span id="methodPreview">
                @Model.Method.Substring(0, Math.Min(Model.Method.Length, 50))...
                <a href="#" onclick="toggle('method'); return false;">View More</a>
                </span>
                <span id="methodFull" style="display:none;">
                    @Model.Method
                    <a href="#" onclick="toggle('method'); return false;">View Less</a>
                </span>
            } 
            else 
            {
                <span>(No data available)</span>
            }
        </dd>

        <!-- Outcomes (reduced, with toggle to allow expansion) -->
        <dt class="col-sm-3">@Html.DisplayNameFor(MyProposalViewModel => MyProposalViewModel.Outcomes)</dt>
        <dd class="col-sm-9">
            @if (!string.IsNullOrWhiteSpace(Model.Outcomes))
            {
                <span id="outcomesPreview">
                    @Model.Outcomes.Substring(0, Math.Min(Model.Outcomes.Length, 50))...
                    <a href="#" onclick="toggle('outcomes'); return false;">View More</a>
                </span>
                <span id="outcomesFull" style="display:none;">
                    @Model.Outcomes
                    <a href="#" onclick="toggle('outcomes'); return false;">View Less</a>
                </span>
            }
            else
            {
                <span>(No data available)</span>
            }
        </dd>

        <!-- Resource -->
        <dt class="col-sm-3">@Html.DisplayNameFor(MyProposalViewModel => MyProposalViewModel.Resources)</dt>
        <dd class="col-sm-9">@(!string.IsNullOrWhiteSpace(Model.Resources) ? Model.Resources : "(No data available)")</dd>


        <!-- Ethical Considerations -->
        <dt class="col-sm-3">@Html.DisplayNameFor(MyProposalViewModel => MyProposalViewModel.EthicalConsiderations)</dt>
        <dd class="col-sm-9">@(!string.IsNullOrWhiteSpace(Model.EthicalConsiderations) ? Model.EthicalConsiderations : "(No data available)")</dd>

        <!-- Milestones -->
        <dt class="col-sm-3">@Html.DisplayNameFor(MyProposalViewModel => MyProposalViewModel.Milestones)</dt>
        <dd class="col-sm-9">@(!string.IsNullOrWhiteSpace(Model.Milestones) ? Model.Milestones : "(No data available)")</dd>

        <!-- Estimated completion date -->
        <dt class="col-sm-3">@Html.DisplayNameFor(MyProposalViewModel => MyProposalViewModel.EstimatedCompletionDate)</dt>
        <dd class="col-sm-9">@((Model.EstimatedCompletionDate != DateTime.MinValue) ? Model.EstimatedCompletionDate.ToString("yyyy-MM-dd") : "(No date provided)")</dd>

    </dl>
</div>

<!-- Javascript function to toggle Synopsis, Method, and Outcomes fields -->
@section Scripts {
    <script>
        function toggle(section) {
            const preview = document.getElementById(section + 'Preview');
            const full = document.getElementById(section + 'Full');

            // Handling for blank data fields
            if (preview.style.display === 'none') {
                preview.style.display = '';
                full.style.display = 'none';
            } else {
                preview.style.display = 'none';
                full.style.display = '';
            }
        }
    </script>
}